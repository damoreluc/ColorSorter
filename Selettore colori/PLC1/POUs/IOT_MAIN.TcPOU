<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="IOT_MAIN" Id="{cb4f58dc-6815-4bfd-9a0c-655394d81fe7}" SpecialFunc="None">
    <Declaration><![CDATA[(* -----------------------------------------------------------------------------
| This sample has been supplied by Beckhoff As-Is and is intended only as an   |
| example implementation. Functionality is not guaranteed.                     |
----------------------------------------------------------------------------- *)

PROGRAM IOT_MAIN
VAR
	bInitialized : BOOL;
	bConnect : BOOL;		// richiesta TRUE -> connetti FALSE -> disconnetti
	
	// array per i dati da pubblicare e loro dimensione 
	aPeriodicPublish : ARRAY[0..GVL_IOT_Constants.cIOTMAXDATA - 1] OF ST_IOT_PeriodicPublishData;
	aOnChangePublish : ARRAY[0..GVL_IOT_Constants.cIOTMAXDATA - 1] OF ST_IOT_OnChangePublishData;		
	nPeriodicPublishSize : UDINT;	
	nOnChangePublishSize : UDINT;	
	
	fbIot : FB_IOT;
	nInitCycles : UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* -----------------------------------------------------------------------------
| This sample has been supplied by Beckhoff As-Is and is intended only as an   |
| example implementation. Functionality is not guaranteed.                     |
----------------------------------------------------------------------------- *)

IF NOT bInitialized THEN
	IF nInitCycles = 0 THEN	
		ACT_InitPeriodic();	
		ACT_InitOnChange();
	END_IF;
	nInitCycles := nInitCycles + 1;
	bConnect := TRUE;
	bInitialized := (GVL_PLC.estep = E_Step.MainStop );
ELSE
	
	// Qui vengono letti ad ogni ciclo i valori da FLM che verranno pubblicati
	// nei topic corrispondenti
 
//	aOnChangePublish[0].stData.uValue.n := TO_DINT(GVL_PLC.stFlmStatus.eStep);
//	aOnChangePublish[1].stData.uValue.b := GVL_PLC.stFlmStatus.bFailure;
//	aOnChangePublish[2].stData.uValue.b := GVL_PLC.stFlmStatus.bWarning;

    aOnChangePublish[0].stData.uValue.f := TO_REAL(GVL_PLC.nColorSensor);
    aOnChangePublish[1].stData.uValue.sv := GVL_PLC.strEStep;
    aOnChangePublish[2].stData.uValue.sv := GVL_PLC.strEsubStepSensor;	
    aOnChangePublish[3].stData.uValue.sv := GVL_PLC.strEsubStepPiston;	
	aOnChangePublish[4].stData.uValue.f := GVL_PLC.nTotalRevs;	
	aOnChangePublish[5].stData.uValue.n := GVL_PLC.nCycles;
	
//	aPeriodicPublish[0].stData.uValue.b := GVL_PLC.stFlmOut.bCorkingVertical;

	
	fbIot(
		bEnable:= TRUE, 
		bConnect:= bConnect, 
		tAutoAckTime:= T#2M, 
		stParams:= GVL_IOT.stIotParams, 
		aPeriodicPublish := aPeriodicPublish,		
		aOnChangePublish := aOnChangePublish,
		nPeriodicPublishSize := nPeriodicPublishSize, 
		nOnChangePublishSize := nOnChangePublishSize
	);
	
	// I comandi letti nel subtopic corrispondente vengono qui scritti su
	// delle variabili globali in modo da poter essere letti dalla task PLC
	// e usati all'interno di FLM
//	GVL_IOT.stFlmCmd.bStart := fbIot.bFlmStartCmd;
//	GVL_IOT.stFlmCmd.bStop := fbIot.bFlmStopCmd;
//	GVL_IOT.stFlmCmd.bAck := fbIot.bFlmAckCmd;
END_IF]]></ST>
    </Implementation>
    <Action Name="ACT_InitOnChange" Id="{f088ad27-9958-4dee-bd04-e3c24f1c4b7c}">
      <Implementation>
        <ST><![CDATA[(* -----------------------------------------------------------------------------
| This sample has been supplied by Beckhoff As-Is and is intended only as an   |
| example implementation. Functionality is not guaranteed.                     |
----------------------------------------------------------------------------- *)

// inizializzazione degli elementi dell'array che contiene i dati da scambiare
// al cambiamento

aOnChangePublish[0].stData.sSubtopic := '/ncolorsensor';
aOnChangePublish[0].stData.eType := E_IOT_DataType.F64;

aOnChangePublish[1].stData.sSubtopic := '/estep';
aOnChangePublish[1].stData.eType := E_IOT_DataType.S50;

aOnChangePublish[2].stData.sSubtopic := '/esubstepsensor';
aOnChangePublish[2].stData.eType := E_IOT_DataType.S50;

aOnChangePublish[3].stData.sSubtopic := '/esubsteppistons';
aOnChangePublish[3].stData.eType := E_IOT_DataType.S50;

aOnChangePublish[4].stData.sSubtopic := '/nTotalRevs';
aOnChangePublish[4].stData.eType := E_IOT_DataType.F64;

aOnChangePublish[5].stData.sSubtopic := '/nCycles';
aOnChangePublish[5].stData.eType := E_IOT_DataType.I32;

//aOnChangePublish[2].stData.sSubtopic := '/Warning';
//aOnChangePublish[2].stData.eType := E_IOT_DataType.Boolean;

// dimensione effettiva dell'array
nOnChangePublishSize := 6;]]></ST>
      </Implementation>
    </Action>
    <Action Name="ACT_InitPeriodic" Id="{34aadb32-f70a-4eb7-a69c-27a152d30f33}">
      <Implementation>
        <ST><![CDATA[(* -----------------------------------------------------------------------------
| This sample has been supplied by Beckhoff As-Is and is intended only as an   |
| example implementation. Functionality is not guaranteed.                     |
----------------------------------------------------------------------------- *)

// inizializzazione degli elementi dell'array che contiene i dati da scambiare
// ciclicamente.

aPeriodicPublish[0].eUpdateSpeed := E_IOT_UpdateSpeed.Fast;
aPeriodicPublish[0].stData.sSubtopic := '/TaskRunning';
aPeriodicPublish[0].stData.eType := E_IOT_DataType.Boolean;

(*
aPeriodicPublish[1].eUpdateSpeed := E_IOT_UpdateSpeed.Fast;
aPeriodicPublish[1].stData.sSubtopic := '/CorkingRotation';
aPeriodicPublish[1].stData.eType := E_IOT_DataType.Boolean;

aPeriodicPublish[2].eUpdateSpeed := E_IOT_UpdateSpeed.Slow;
aPeriodicPublish[2].stData.sSubtopic := '/WaterLevel';
aPeriodicPublish[2].stData.eType := E_IOT_DataType.F64;

aPeriodicPublish[3].eUpdateSpeed := E_IOT_UpdateSpeed.Slow;
aPeriodicPublish[3].stData.sSubtopic := '/MintLevel';
aPeriodicPublish[3].stData.eType := E_IOT_DataType.F64;
*)

// dimensione effettiva dell'array
nPeriodicPublishSize := 1;
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="IOT_MAIN">
      <LineId Id="3" Count="26" />
      <LineId Id="69" Count="1" />
      <LineId Id="30" Count="19" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="IOT_MAIN.ACT_InitOnChange">
      <LineId Id="2" Count="18" />
      <LineId Id="26" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="30" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="22" Count="3" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="IOT_MAIN.ACT_InitPeriodic">
      <LineId Id="2" Count="27" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>